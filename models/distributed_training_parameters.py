# parameters for IIO experiments
# parameters used in the different training processes for the
# centralized training, compartmentalisation, fine-tuning, and upper/lower baselines
import torch

# load qst_obj
qst_obj = torch.load("models/saved_objects/qst_epoct.pt")
lr_feature_decoders = {
    feature_name: 1e-3 if feature_name in qst_obj.categorical_features_names else 1e-4
    for feature_name in qst_obj.feature_names
}
lr_encoders = {feature_name: 1e-2 for feature_name in qst_obj.feature_names}

param = {}
param["lower-baseline"] = {
    "n_epochs": 100,
    "lr_encoders": lr_encoders,
    "lr_feature_decoders": lr_feature_decoders,
    "lr_diseases_decoder": 1e-2,
    "lr": 2e-3,
    "decay_factor": 0.9,
    "step_size": 150,
    "batch_size": 20,
    "aux_loss_encoded_weight": 1,
    "aux_loss_unknown_weight": 1,
    "diseases_loss_weight": 5,
    "idemp_loss_weight": 1,
    "gradient_clipping": 10000,
}
param["common"] = {
    perc: {
        "n_epochs": 130,
        "lr_encoders": lr_encoders,
        "lr_feature_decoders": lr_feature_decoders,
        "lr_diseases_decoder": 1e-2,
        "lr": 2e-3,
        "decay_factor": 0.9,
        "step_size": 150,
        "batch_size": 20,
        "aux_loss_encoded_weight": 1,
        "aux_loss_unknown_weight": 1,
        "diseases_loss_weight": 5,
        "idemp_loss_weight": 1,
        "gradient_clipping": 10000,
    }
    for perc in [60, 80, 90, 100]
}
param["upper-baseline"] = {
    60: {
        "n_epochs": 130,
        "lr_encoders": lr_encoders,
        "lr_feature_decoders": lr_feature_decoders,
        "lr_diseases_decoder": 1e-2,
        "lr": 2e-3,
        "decay_factor": 0.9,
        "step_size": 150,
        "batch_size": 20,
        "aux_loss_encoded_weight": 1,
        "aux_loss_unknown_weight": 1,
        "diseases_loss_weight": 5,
        "idemp_loss_weight": 1,
        "gradient_clipping": 10000,
    },
    80: {
        "n_epochs": 130,
        "lr_encoders": lr_encoders,
        "lr_feature_decoders": lr_feature_decoders,
        "lr_diseases_decoder": 1e-2,
        "lr": 2e-3,
        "decay_factor": 0.9,
        "step_size": 150,
        "batch_size": 20,
        "aux_loss_encoded_weight": 1,
        "aux_loss_unknown_weight": 1,
        "diseases_loss_weight": 5,
        "idemp_loss_weight": 1,
        "gradient_clipping": 10000,
    },
    90: {
        "n_epochs": 130,
        "lr_encoders": lr_encoders,
        "lr_feature_decoders": lr_feature_decoders,
        "lr_diseases_decoder": 1e-2,
        "lr": 2e-3,
        "decay_factor": 0.9,
        "step_size": 150,
        "batch_size": 20,
        "aux_loss_encoded_weight": 1,
        "aux_loss_unknown_weight": 1,
        "diseases_loss_weight": 5,
        "idemp_loss_weight": 1,
        "gradient_clipping": 10000,
    },
    100: {
        "n_epochs": 160,
        "lr_encoders": lr_encoders,
        "lr_feature_decoders": lr_feature_decoders,
        "lr_diseases_decoder": 1e-2,
        "lr": 2e-3,
        "decay_factor": 0.9,
        "step_size": 150,
        "batch_size": 20,
        "aux_loss_encoded_weight": 1,
        "aux_loss_unknown_weight": 1,
        "diseases_loss_weight": 5,
        "idemp_loss_weight": 1,
        "gradient_clipping": 10000,
    },
}

param["fine-tune"] = {
    60: {
        "n_epochs": (70, 90),
        "lr_encoders": lr_encoders,
        "lr_feature_decoders": lr_feature_decoders,
        "lr_diseases_decoder": 1e-2,
        "lr": 2e-3,
        "decay_factor": 0.9,
        "step_size": 150,
        "batch_size": 20,
        "aux_loss_encoded_weight": 1,
        "aux_loss_unknown_weight": 1,
        "diseases_loss_weight": 5,
        "idemp_loss_weight": 1,
        "gradient_clipping": 10000,
    },
    80: {
        "n_epochs": (70, 90),
        "lr_encoders": lr_encoders,
        "lr_feature_decoders": lr_feature_decoders,
        "lr_diseases_decoder": 1e-2,
        "lr": 2e-3,
        "decay_factor": 0.9,
        "step_size": 150,
        "batch_size": 20,
        "aux_loss_encoded_weight": 1,
        "aux_loss_unknown_weight": 1,
        "diseases_loss_weight": 5,
        "idemp_loss_weight": 1,
        "gradient_clipping": 10000,
    },
    90: {
        "n_epochs": (70, 90),
        "lr_encoders": lr_encoders,
        "lr_feature_decoders": lr_feature_decoders,
        "lr_diseases_decoder": 1e-2,
        "lr": 2e-3,
        "decay_factor": 0.9,
        "step_size": 150,
        "batch_size": 20,
        "aux_loss_encoded_weight": 1,
        "aux_loss_unknown_weight": 1,
        "diseases_loss_weight": 5,
        "idemp_loss_weight": 1,
        "gradient_clipping": 10000,
    },
    100: {
        "n_epochs": (0, 20),
        "lr_encoders": lr_encoders,
        "lr_feature_decoders": lr_feature_decoders,
        "lr_diseases_decoder": 1e-2,
        "lr": 2e-3,
        "decay_factor": 0.9,
        "step_size": 150,
        "batch_size": 20,
        "aux_loss_encoded_weight": 1,
        "aux_loss_unknown_weight": 1,
        "diseases_loss_weight": 5,
        "idemp_loss_weight": 1,
        "gradient_clipping": 10000,
    },
}

param["compartm"] = {
    60: {
        "n_epochs": 130,
        "lr_encoders": lr_encoders,
        "lr_feature_decoders": lr_feature_decoders,
        "lr_diseases_decoder": 1e-2,
        "lr": 2e-3,
        "decay_factor": 0.9,
        "step_size": 150,
        "batch_size": 20,
        "aux_loss_encoded_weight": 1,
        "aux_loss_unknown_weight": 1,
        "diseases_loss_weight": 5,
        "idemp_loss_weight": 1,
        "gradient_clipping": 10000,
    },
    80: {
        "n_epochs": 130,
        "lr_encoders": {feature_name: 1e-3 for feature_name in qst_obj.feature_names},
        "lr_feature_decoders": lr_feature_decoders,
        "lr_diseases_decoder": 1e-2,
        "lr": 2e-3,
        "decay_factor": 0.9,
        "step_size": 150,
        "batch_size": 20,
        "aux_loss_encoded_weight": 1,
        "aux_loss_unknown_weight": 1,
        "diseases_loss_weight": 5,
        "idemp_loss_weight": 1,
        "gradient_clipping": 10000,
    },
    90: {
        "n_epochs": 130,
        "lr_encoders": lr_encoders,
        "lr_feature_decoders": lr_feature_decoders,
        "lr_diseases_decoder": 1e-2,
        "lr": 2e-3,
        "decay_factor": 0.9,
        "step_size": 150,
        "batch_size": 20,
        "aux_loss_encoded_weight": 1,
        "aux_loss_unknown_weight": 1,
        "diseases_loss_weight": 5,
        "idemp_loss_weight": 1,
        "gradient_clipping": 10000,
    },
    100: {
        "n_epochs": 130,
        "lr_encoders": lr_encoders,
        "lr_feature_decoders": lr_feature_decoders,
        "lr_diseases_decoder": 1e-2,
        "lr": 2e-3,
        "decay_factor": 0.9,
        "step_size": 150,
        "batch_size": 20,
        "aux_loss_encoded_weight": 1,
        "aux_loss_unknown_weight": 1,
        "diseases_loss_weight": 5,
        "idemp_loss_weight": 1,
        "gradient_clipping": 10000,
    },
}
